[
  [
    "io.r2dbc.spi.Connection",
    "io.r2dbc.spi.Wrapped"
  ],
  [
    "java.lang.reflect.ParameterizedType",
    "org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy",
    "java.io.Serializable"
  ],
  [
    "java.lang.reflect.TypeVariable",
    "org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy",
    "java.io.Serializable"
  ],
  [
    "java.lang.reflect.WildcardType",
    "org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy",
    "java.io.Serializable"
  ],
  [
    "nl.appsource.stream.demo.repository.CategorieRepository",
    "org.springframework.data.repository.Repository",
    "org.springframework.transaction.interceptor.TransactionalProxy",
    "org.springframework.aop.framework.Advised",
    "org.springframework.core.DecoratingProxy",
    "java.io.Serializable"
  ],
  [
    "nl.appsource.stream.demo.repository.CategorieRepository",
    "org.springframework.data.repository.Repository",
    "org.springframework.transaction.interceptor.TransactionalProxy",
    "org.springframework.aop.framework.Advised",
    "org.springframework.core.DecoratingProxy"
  ],
  [
    "nl.appsource.stream.demo.repository.CitaatRepository",
    "org.springframework.data.repository.Repository",
    "org.springframework.transaction.interceptor.TransactionalProxy",
    "org.springframework.aop.framework.Advised",
    "org.springframework.core.DecoratingProxy",
    "java.io.Serializable"
  ],
  [
    "nl.appsource.stream.demo.repository.CitaatRepository",
    "org.springframework.data.repository.Repository",
    "org.springframework.transaction.interceptor.TransactionalProxy",
    "org.springframework.aop.framework.Advised",
    "org.springframework.core.DecoratingProxy"
  ],
  [
    "nl.appsource.stream.demo.repository.SprekerRepository",
    "org.springframework.data.repository.Repository",
    "org.springframework.transaction.interceptor.TransactionalProxy",
    "org.springframework.aop.framework.Advised",
    "org.springframework.core.DecoratingProxy",
    "java.io.Serializable"
  ],
  [
    "nl.appsource.stream.demo.repository.SprekerRepository",
    "org.springframework.data.repository.Repository",
    "org.springframework.transaction.interceptor.TransactionalProxy",
    "org.springframework.aop.framework.Advised",
    "org.springframework.core.DecoratingProxy"
  ],
  [
    "org.springframework.boot.context.properties.ConfigurationProperties",
    "org.springframework.core.annotation.SynthesizedAnnotation"
  ],
  [
    "org.springframework.context.event.EventListener",
    "org.springframework.core.annotation.SynthesizedAnnotation"
  ],
  [
    "org.springframework.data.annotation.QueryAnnotation",
    "org.springframework.core.annotation.SynthesizedAnnotation"
  ],
  [
    "org.springframework.web.bind.annotation.RequestMapping",
    "org.springframework.core.annotation.SynthesizedAnnotation"
  ]
]
